{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.jsx", "../app/routes/send.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import polarisStyles from '@shopify/polaris/build/esm/styles.css';\nimport { AppProvider, Banner, ProgressBar, Page, Card, Text, BlockStack, InlineStack, TextField, Button, FooterHelp, Link, PageActions, Grid } from '@shopify/polaris';\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts } from\n\"@remix-run/react\";\n\nimport { useState } from 'react';\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport default function App() {\n  const emptyPeople = {\n    name: \"\",\n    phone: \"+44\"\n  };\n  const [people, setPeople] = useState([emptyPeople]);\n  const [sendProgress, setProgress] = useState(0);\n  const [currentInvite, setCurrentInvite] = useState(0);\n  const [showProgress, setShowProgress] = useState(false);\n\n  const knuthShuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const handleNameChange =\n  (newValue, index) => {\n    setPeople((prevState) => prevState.map((item, psIndex) => {\n      if (psIndex === index) {\n        return {\n          name: newValue,\n          phone: item.phone\n        };\n      } else {\n        return item;\n      }\n    }));\n  };\n\n\n  const handlePhoneChange =\n  (newValue, index) => {\n    setPeople((prevState) => prevState.map((item, psIndex) => {\n      if (psIndex === index) {\n        return {\n          name: item.name,\n          phone: newValue\n        };\n      } else {\n        return item;\n      }\n    }));\n  };\n\n\n  const handleDelete = (index) => {\n    setPeople((people) => people.filter((item, ogIndex) => index !== ogIndex));\n  };\n\n  const handleSend = async () => {\n    if (people.length > 1) {\n      const shuffledPeople = knuthShuffle(people);\n      const matches = shuffledPeople.map((santa, index) => {\n        const receiver = shuffledPeople[index + 1] || shuffledPeople[0];\n        return {\n          toPhone: santa.phone,\n          message: `Hi ${santa.name},\\nYou need to get a gift for ${receiver.name}.\\nThanks\\nSanta \uD83C\uDF85\uD83C\uDFFB\\nPS\\nKeep it a secret \uD83E\uDD2B`\n        };\n      });\n\n      setShowProgress(true);\n\n      for (let [index, person] of matches.entries()) {\n        setCurrentInvite(index + 1);\n        setProgress(parseInt((index + 1) / people.length * 100));\n        // Send data to the backend via POST\n        const response = await fetch('/send', {\n          method: 'POST',\n          mode: 'cors',\n          body: JSON.stringify({\n            to: person.toPhone,\n            message: person.message\n          })\n        });\n        const messages = await response.json();\n      }\n\n      setShowProgress(false);\n    }\n  };\n\n  const progressMarkup = showProgress &&\n  <Banner title=\"Sending...\">\n      <Text>Invite {currentInvite} of {people.length}</Text>\n      <ProgressBar progress={sendProgress}></ProgressBar>\n    </Banner>;\n\n\n  return (\n    <html>\n      <head>\n        <Meta />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com/\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com/\" crossOrigin=\"anonymous\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@450;550;650;700&display=swap\" />\n        <Links />\n      </head>\n      <body>\n        <AppProvider>\n          <Page\n            title=\"\uD83E\uDD2B Secret SMS Santa \uD83C\uDF85\uD83C\uDFFB\"\n            primaryAction={<Button variant=\"primary\" onClick={handleSend}>Send {people.length} Invites</Button>}>\n\n            <BlockStack gap=\"500\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                Add your participants below, then click the button above to send the SMS invites.\n              </Text>\n              {progressMarkup}\n              <Grid>\n              {\n                people.map((person, index) =>\n                <Grid.Cell columnSpan={{ xs: 6, sm: 3, md: 3, lg: 6, xl: 6 }} key={index}>\n                    <Card>\n                      <InlineStack align=\"space-between\">\n                        <Text as=\"h2\" variant=\"headingSm\">Person #{index + 1}</Text>\n                        <Link\n                        monochrome\n                        onClick={() => {\n                          handleDelete(index);\n                        }}>\n                        Delete</Link>\n                      </InlineStack>\n                      <TextField\n                      label=\"Name\"\n                      value={person.name}\n                      onChange={(val) => {\n                        handleNameChange(val, index);\n                      }}\n                      autoComplete=\"off\" />\n\n                      <TextField\n                      label=\"Phone Number\"\n                      value={person.phone}\n                      onChange={(val) => {\n                        handlePhoneChange(val, index);\n                      }}\n                      type=\"tel\"\n                      autoComplete=\"off\" />\n\n                    </Card>\n                  </Grid.Cell>\n                )}\n\n              </Grid>\n              <PageActions\n                secondaryActions={[\n                {\n                  content: 'Add person',\n                  onAction: () => {\n                    setPeople([...people, emptyPeople]);\n                  }\n                }]} />\n\n\n            </BlockStack>\n            <FooterHelp>\n              Built by {' '}\n              <Link url=\"https://www.stephenkeable.co.uk\">\n                Stephen Keable\n              </Link>\n            </FooterHelp>\n          </Page>\n        </AppProvider>\n        <Outlet />\n\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import twilio from 'twilio';\nimport { json } from \"@remix-run/node\";\n\nexport const action = async ({\n  request,\n}) => {\n  if (request.method !== \"POST\") {\n    return json({ message: \"Method not allowed\" }, 405);\n  }\n\n  const payload = await request.json();\n\n  const accountSid = process.env.TWILIO_SID;\n  const authToken = process.env.TWILIO_TOKEN;\n\n  const client = twilio(accountSid, authToken);\n  \n  try {\n    const message = await client.messages\n      .create({\n          body: payload.message,\n          from: '+447700170519',\n          to: payload.to\n      })\n    return json({ success: true, messageSid: message.sid }, 200);\n  } catch (error) {\n    return json({ success: false, error }, 200);\n  }\n};\n", "export default {'entry':{'module':'/build/entry.client-XP6GCI27.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-YNGWI6MU.js','/build/_shared/chunk-Q4FQXG6T.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-54HNFE4G.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/send':{'id':'routes/send','parentId':'root','path':'send','index':undefined,'caseSensitive':undefined,'module':'/build/routes/send-467FHBHG.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false}},'version':'4b877d37','hmr':{'runtime':'/build/_shared/chunk-Q4FQXG6T.js','timestamp':1698938069003},'url':'/build/manifest-4B877D37.js'};", "\nimport * as entryServer from \"/Users/stephenkeable/projects/secret-sms-santa/node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/send.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/send\": {\n      id: \"routes/send\",\n      parentId: \"root\",\n      path: \"send\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "people"]
}
